kind: Environment
name: 'Copy of test-kinesis'
type: primary
templateVariables:
    stream_name: 'kinesis-stream-{{env.unique}}'
    shard_count: 1
    retention_period: 24
    encryption_type: NONE
    kms_key_id: 'null'
    stream_mode: PROVISIONED
    enforce_consumer_deletion: false
    create_timeout: 5m
    update_timeout: 5m
    delete_timeout: 5m
environmentVariables:
    AWS_ACCESS_KEY_ID: YOUR-ACCESS-KEY #REQ
    AWS_REGION: YOUR-REGION #REQ
    AWS_SECRET_ACCESS_KEY: YOUR-SECRET-ACCESS-KEY #REQ
    AWS_SESSION_TOKEN: YOUR-SSO-TOKEN #OPT
components:
    -
        kind: Terraform
        name: kinesis
        gitRepo: 'https://github.com/aminalali8/aws-kinesis-tf-tpl.git'
        gitBranch: main
        gitApplicationPath: /
        runnerImage: 'hashicorp/terraform:1.5'
        deploy:
            - |
                cat <<EOL > terraform.tfvars
                stream_name           = "{{ template.vars.stream_name }}"
                shard_count           = "{{ template.vars.shard_count }}"
                retention_period      = "{{ template.vars.retention_period }}"
                encryption_type       = "{{ template.vars.encryption_type }}"
                kms_key_id            = "{{ template.vars.kms_key_id }}"
                shard_level_metrics   = ["IncomingBytes", "OutgoingBytes"]
                stream_mode           = "{{ template.vars.stream_mode }}"
                tags = {
                    Environment = "prod"
                    Project     = "MyKinesisProject"
                }
                create_timeout   = "{{ template.vars.create_timeout }}"
                update_timeout   = "{{ template.vars.update_timeout }}"
                delete_timeout   = "{{ template.vars.delete_timeout }}"
                EOL
            - '/bns/helpers/terraform/get_managed_backend > zz_backend_override.tf'
            - 'ls -la'
            - 'cat terraform.tfvars'
            - 'terraform init -input=false -no-color'
            - 'terraform plan -var-file=terraform.tfvars -input=false -no-color'
            - 'terraform apply -var-file=terraform.tfvars -input=false -auto-approve -no-color'
        destroy:
            - |
                cat <<EOL > terraform.tfvars
                stream_name           = "{{ template.vars.stream_name }}"
                shard_count           = "{{ template.vars.shard_count }}"
                retention_period      = "{{ template.vars.retention_period }}"
                encryption_type       = "{{ template.vars.encryption_type }}"
                kms_key_id            = "{{ template.vars.kms_key_id }}"
                shard_level_metrics   = ["IncomingBytes", "OutgoingBytes"]
                stream_mode           = "{{ template.vars.stream_mode }}"
                tags = {
                    Environment = "prod"
                    Project     = "MyKinesisProject"
                }
                create_timeout   = "{{ template.vars.create_timeout }}"
                update_timeout   = "{{ template.vars.update_timeout }}"
                delete_timeout   = "{{ template.vars.delete_timeout }}"
                EOL
            - '/bns/helpers/terraform/get_managed_backend > zz_backend_override.tf'
            - 'terraform init -input=false -no-color'
            - 'terraform destroy -var-file=terraform.tfvars -input=false -auto-approve -no-color'
